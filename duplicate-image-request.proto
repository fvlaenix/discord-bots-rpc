syntax ="proto3";

package duplicate;

option java_multiple_files = true;
option java_package = "com.fvlaenix.duplicate.protobuf";

import "is-alive.proto";
import "image.proto";

message Size {
  int32 x = 1;
  int32 y = 2;
}

message AddImageRequest {
  string group = 1;
  string messageId = 2;
  int32 numberInMessage = 3;
  string additionalInfo = 4;
  Image image = 5;
  int64 timestamp = 6;
}

message AddImageResponseOk {
  bool isAdded = 1;
  CheckImageResponseImagesInfo imageInfo = 2;
}

message AddImageResponse {
  oneof response{
    AddImageResponseOk responseOk = 1;
    string error = 2;
  }
}

message ExistsImageRequest {
  string group = 1;
  string messageId = 2;
  int32 numberInMessage = 3;
}

message ExistsImageResponse {
  oneof response {
    bool isExists = 1;
    string error = 2;
  }
}

message CheckImageRequest {
  string group = 1;
  Image image = 2;
  int64 timestamp = 3;
}

message CheckImageResponseImagesInfo {
  repeated CheckImageResponseImageInfo images = 1;
  
  message CheckImageResponseImageInfo {
    string messageId = 1;
    int32 numberInMessage = 2;
    string additionalInfo = 3;
    int64 level = 4;
  }
}

message CheckImageResponse {
  oneof response{
    CheckImageResponseImagesInfo imageInfo = 1;
    string error = 2;
  }
}

message DeleteImageRequest {
  string messageId = 1;
  int32 numberInMessage = 2;
}

message DeleteImageResponse {
  oneof response {
    bool isDeleted = 1;
    string error = 2;
  }
}

message GetCompressionSizeRequest {

}

message GetCompressionSizeResponse {
  oneof size {
    int32 x = 1;
    int32 y = 2;
    string error = 3;
  }
}

service DuplicateImagesService {
  rpc AddImageWithCheck(AddImageRequest) returns (AddImageResponse);
  rpc ExistsImage(ExistsImageRequest) returns (ExistsImageResponse);
  rpc CheckImage(CheckImageRequest) returns (CheckImageResponse);
  rpc DeleteImage(DeleteImageRequest) returns (DeleteImageResponse);
  rpc GetImageCompressionSize(GetCompressionSizeRequest) returns (GetCompressionSizeResponse);
  rpc IsAlive(IsAliveRequest) returns (IsAliveResponse);
}